name: Release

on:
  create:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  extract_version:
    name: Extract version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.step1.outputs.version }}
    steps:
      - name: Store tag version in output
        id: extracted_version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
  assemble:
    name: Assemble
    runs-on: ubuntu-latest
    needs: extract_version
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/caches/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-
      - name: Gradle Assemble
        run: |
          ./gradlew --version
          echo "ref=${GITHUB_REF}, command=${GITHUB_REF/refs\/tags\//}"
          ./gradlew -P "release.version"="${{ needs.extract_version.outputs.version }}" assemble --scan --warning-mode=all
      - uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: build/
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - extract_version
      - assemble
    steps:
      - uses: actions/checkout@v2
      - name: Restore Build Output
        uses: actions/download-artifact@v2
        with:
          name: build-output
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/caches/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-
      - name: Release
#        with:
#          version: ${{ needs.extract_version.outputs.extracted_version }}
#          bintray_user: ${{ secrets.BINTRAY_KEY }}
#          bintray_key:  ${{ secrets.BINTRAY_USER }}
        run: |
          echo "run gradle command here with version from needs='${{ needs.extract_version.outputs.version }}'"
